// finding the missing number
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        /*
        // brute force
        // TC : O(n)
        // SC : O(n)
        int n = nums.size();
        vector<int> hash(n + 1, 0);  
        for (int i = 0; i < n; i++) {
            hash[nums[i]]++;
        }
        for (int i = 0; i <= n; i++) {
            if (hash[i] == 0) return i;  
        }
        return -1;  
        */
        /*
        // better
        // TC : O(n)
        // SC : O(1)
        int n=nums.size();
        int sum=(n*(n+1))/2;
        int temp=0;
        for(int i:nums){
            temp+=i;
        }
        int ans=sum-temp;
        return ans;
        */
        // optimal
        // TC : O(n)
        // SC : O(1)
        int n=nums.size();
        int xor1=0, xor2=0;
        for(int i=0;i<n;i++){
            xor1=xor1^nums[i];
            xor2=xor2^i;
        }
        xor2=xor2^n;
        return xor1^xor2;
    }
};
